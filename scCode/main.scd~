"/home/marierm/src/reaper_linux_x86_64/REAPER/reaper5 albinoReaper.RPP".unixCmd;

(
{
	s.bootSync;
	"prep/sponge.scd".loadRelative;
	"prep/parents.scd".loadRelative;
	"prep/parentsFm.scd".loadRelative;
	"prep/fm.scd".loadRelative;
	s.sync;
	(97..101).do({ |i, j|
		var sym = ("sponge_" ++ i.asAscii).asSymbol;
		PR(\sponge).chuck(BP(sym), parms:(
			ip: "192.168.109." ++ i,
			defName: sym
		));
		BP(sym).play;
		s.sync;
		BP(sym).sponge.hold_(true);
		PR(\fm).chuck(BP( (sym ++ 0).asSymbol ), parms:(
			interpolatorPath: ("fm0*").resolveRelative.pathMatch.sort.last.resolveRelative,
			sponge: BP(sym).sponge,
			outBus: j * 2,
			notes: ([ \en1, \en2, \en3].keynum.mirror2.clump(3)).flat + (0 * 12),
			// notes: ([ \bb0, \bb1, \bb2].keynum.mirror2.clump(3)).flat + (i * 12),
			numNotes: 6,
			fmId: 20,
			fsrMuteThreshold: 0.85, // larger number = muting is easier
			chords: [
				[ \en1, \en2, \en3, \en3, \en2, \en1].keynum,
				// [ \fs7, \bn7, \en8, \en7, \bf7, \cn8].keynum - 12,
				[ \en2, \en3, \gn3, \dn4, \fs4, \bn4].keynum,
				[ \en2, \dn3, \fs3, \dn4, \fs4, \bn4].keynum,
				[ \en2, \cn3, \gn3, \dn4, \fs4, \bn4].keynum,
				[ \en2, \bn2, \an3, \dn4, \fs4, \bn4].keynum,
				[ \en2, \en3, \cn4, \dn4, \fs4, \bn4].keynum,
				[ \en2, \dn3, \gn3, \cn4, \fs4, \bn4].keynum,
				[ \en2, \cn3, \gn3, \bn3, \fs4, \bn4].keynum,
				[ \en2, \dn3, \fs3, \bn3, \en4, \an4].keynum,
				[ \fs7, \bn7, \en8, \en7, \bf7, \cn8].keynum - 24,
				[ \fn7, \bf7, \ef8, \en7, \bf7, \cn8].keynum - 24,
				[ \en7, \an7, \cs8, \ef7, \af7, \dn8].keynum - 24,
				[ \gf7, \an7, \cn8, \fn7, \af7, \df8].keynum - 24,
				[ \gf7, \an7, \cn8, \fn7, \bf7, \dn8].keynum - 24,
				[ \gf7, \an7, \cn8, \fn7, \bn7, \dn8].keynum - 24,
				[ \gn7, \an7, \cn8, \fn7, \bn7, \dn8].keynum - 24,
				[ \gn7, \an7, \cn8, \fn7, \fn8, \dn8].keynum - 24
			]
		));
		s.sync;
		sym.post; " ready.".postln;
	});
	s.sync;
	~rppFilePath = "";
	"killall jconvolver;".unixCmd;
	"/home/marierm/scripts/jackDisconnectEverything.py".unixCmd;
	"jconvolver -N rvb ~/docs/soundBank/ir/True\\ M7/Halls/amsterdamHall.conf".unixCmd;
	
	"jack_connect SuperCollider:out_1  REAPER:in1
	 jack_connect SuperCollider:out_2   REAPER:in2
	 jack_connect SuperCollider:out_3   REAPER:in3
	 jack_connect SuperCollider:out_4   REAPER:in4
	 jack_connect SuperCollider:out_5   REAPER:in5
	 jack_connect SuperCollider:out_6   REAPER:in6
	 jack_connect SuperCollider:out_7   REAPER:in7
	 jack_connect SuperCollider:out_8   REAPER:in8
	 jack_connect SuperCollider:out_9   REAPER:in9
	 jack_connect SuperCollider:out_10  REAPER:in10
	 jack_connect REAPER:out1 system:playback_1
     jack_connect REAPER:out2 system:playback_2".unixCmd;


	"jack_connect REAPER:out7 rvb:inL
     jack_connect REAPER:out8 rvb:inR
     jack_connect rvb:outL REAPER:in13
     jack_connect rvb:outR REAPER:in14".unixCmd;


	(97..101).do({ |i|
		var sym = ("sponge_" ++ i.asAscii).asSymbol;
		BP(sym).sponge.hold_(false);
	});
}.fork
)


~sp = SpongeFeather
~sponge = SpongeFeather(
	"/sponge",
	\spongeTest01,
	NetAddr("192.168.109.100", 50502),
	50501,
	currentEnvironment
);
~sponge.gui;


s.queryAllNodes

	"prep/feu.scd".loadRelative;
	"prep/popper.scd".loadRelative;
	"prep/melo.scd".loadRelative;

	
	PR(\fm).chuck(BP(0), parms:(
		interpolatorPath: ("fm0*").resolveRelative.pathMatch.sort.last.resolveRelative,
		outBus: 0,
		notes: ([ \en1, \en2, \en3].keynum.mirror2.clump(3)).flat + (0 * 12),
		// notes: ([ \bb0, \bb1, \bb2].keynum.mirror2.clump(3)).flat + (i * 12),
		numNotes: 6,
		fmId: 20,
		fsrMuteThreshold: 0.85, // larger number = muting is easier
		chords: [
			[ \en1, \en2, \en3, \en3, \en2, \en1].keynum,
			// [ \fs7, \bn7, \en8, \en7, \bf7, \cn8].keynum - 12,
			[ \en2, \en3, \gn3, \dn4, \fs4, \bn4].keynum,
			[ \en2, \dn3, \fs3, \dn4, \fs4, \bn4].keynum,
			[ \en2, \cn3, \gn3, \dn4, \fs4, \bn4].keynum,
			[ \en2, \bn2, \an3, \dn4, \fs4, \bn4].keynum,
			[ \en2, \en3, \cn4, \dn4, \fs4, \bn4].keynum,
			[ \en2, \dn3, \gn3, \cn4, \fs4, \bn4].keynum,
			[ \en2, \cn3, \gn3, \bn3, \fs4, \bn4].keynum,
			[ \en2, \dn3, \fs3, \bn3, \en4, \an4].keynum,
			[ \fs7, \bn7, \en8, \en7, \bf7, \cn8].keynum - 24,
			[ \fn7, \bf7, \ef8, \en7, \bf7, \cn8].keynum - 24,
			[ \en7, \an7, \cs8, \ef7, \af7, \dn8].keynum - 24,
			[ \gf7, \an7, \cn8, \fn7, \af7, \df8].keynum - 24,
			[ \gf7, \an7, \cn8, \fn7, \bf7, \dn8].keynum - 24,
			[ \gf7, \an7, \cn8, \fn7, \bn7, \dn8].keynum - 24,
			[ \gn7, \an7, \cn8, \fn7, \bn7, \dn8].keynum - 24,
			[ \gn7, \an7, \cn8, \fn7, \fn8, \dn8].keynum - 24
		]
	));
	s.sync;
	BP(\sponge).sponge.hold_(false);
	\ready.postln;
}.fork;
)
(
s.boot;

// "export WINEPREFIX=/home/marierm/.reaper64; export WINEARCH=win64; schedtool -F -p 54 -e env WINE_RT=55 WINE_SRV_RT=56 wine \"/home/marierm/.reaper64/drive_c/Program Files/REAPER (x64)/reaper.exe\" Z:\\\\home\\\\marierm\\\\docs\\\\doc\\\\compo\\\\2011\\\\albinoReaper\\\\albinoReaper.RPP".unixCmd;
"killall jconvolver;".unixCmd;

"/home/marierm/src/reaper_linux_x86_64/REAPER/reaper5 /home/marierm/docs/doc/compo/2011/albinoReaper/albinoReaper.RPP".unixCmd;
)

"jconvolver -N rvb ~/docs/soundBank/ir/True\\ M7/Halls/amsterdamHall.conf".unixCmd;
"/home/marierm/scripts/jackDisconnectEverything.py".unixCmd;

(
"jack_connect reaper:out_1 system:playback_1
jack_connect reaper:out_2 system:playback_2
jack_connect REAPER:out5 rvb:inL
jack_connect REAPER:out6 rvb:inR
jack_connect REAPER:out7 rvb:inL
jack_connect REAPER:out8 rvb:inR

jack_connect rvb:outL REAPER:in13
jack_connect rvb:outR REAPER:in14
jack_connect rvb:outL REAPER:in15
jack_connect rvb:outR REAPER:in16".unixCmd;

"jack_connect REAPER:out1 system:playback_1
jack_connect REAPER:out2 system:playback_2
jack_connect REAPER:out1 system:playback_3
jack_connect REAPER:out2 system:playback_4
jack_connect REAPER:out3 system:playback_5
jack_connect REAPER:out4 system:playback_6

jack_connect SuperCollider:out_1 REAPER:in9
jack_connect SuperCollider:out_2 REAPER:in10
jack_connect SuperCollider:out_3 REAPER:in11
jack_connect SuperCollider:out_4 REAPER:in12
jack_connect SuperCollider:out_5 REAPER:in1
jack_connect SuperCollider:out_6 REAPER:in2

jack_connect \"PulseAudio JACK Sink:front-left\" system:playback_1
jack_connect \"PulseAudio JACK Sink:front-right\" system:playback_2
".unixCmd;
)

(
{
	s.bootSync;
	"prep/sponge.scd".loadRelative;
	BP(\sponge).play;
	1.wait;
	s.sync;
	BP(\sponge).sponge.hold_(true); // No sponge actions while loading stuff.
	"prep/parents.scd".loadRelative;
	"prep/parentsFm.scd".loadRelative;
	"prep/fm.scd".loadRelative;
	"prep/feu.scd".loadRelative;
	"prep/popper.scd".loadRelative;
	"prep/melo.scd".loadRelative;
	s.sync;
	PR(\fm).chuck(BP(0), parms:(
		interpolatorPath: ("fm0*").resolveRelative.pathMatch.sort.last.resolveRelative,
		outBus: 0,
		notes: ([ \en1, \en2, \en3].keynum.mirror2.clump(3)).flat + (0 * 12),
		// notes: ([ \bb0, \bb1, \bb2].keynum.mirror2.clump(3)).flat + (i * 12),
		numNotes: 6,
		fmId: 20,
		fsrMuteThreshold: 0.85, // larger number = muting is easier
		chords: [
			[ \en1, \en2, \en3, \en3, \en2, \en1].keynum,
			// [ \fs7, \bn7, \en8, \en7, \bf7, \cn8].keynum - 12,
			[ \en2, \en3, \gn3, \dn4, \fs4, \bn4].keynum,
			[ \en2, \dn3, \fs3, \dn4, \fs4, \bn4].keynum,
			[ \en2, \cn3, \gn3, \dn4, \fs4, \bn4].keynum,
			[ \en2, \bn2, \an3, \dn4, \fs4, \bn4].keynum,
			[ \en2, \en3, \cn4, \dn4, \fs4, \bn4].keynum,
			[ \en2, \dn3, \gn3, \cn4, \fs4, \bn4].keynum,
			[ \en2, \cn3, \gn3, \bn3, \fs4, \bn4].keynum,
			[ \en2, \dn3, \fs3, \bn3, \en4, \an4].keynum,
			[ \fs7, \bn7, \en8, \en7, \bf7, \cn8].keynum - 24,
			[ \fn7, \bf7, \ef8, \en7, \bf7, \cn8].keynum - 24,
			[ \en7, \an7, \cs8, \ef7, \af7, \dn8].keynum - 24,
			[ \gf7, \an7, \cn8, \fn7, \af7, \df8].keynum - 24,
			[ \gf7, \an7, \cn8, \fn7, \bf7, \dn8].keynum - 24,
			[ \gf7, \an7, \cn8, \fn7, \bn7, \dn8].keynum - 24,
			[ \gn7, \an7, \cn8, \fn7, \bn7, \dn8].keynum - 24,
			[ \gn7, \an7, \cn8, \fn7, \fn8, \dn8].keynum - 24
		]
	));
	s.sync;
	BP(\sponge).sponge.hold_(false);
	\ready.postln;
}.fork;
)


(
PR(\melo).chuck(BP(2), parms:(
	interpolatorPath: ("popMelo"++1++"*").resolveRelative.pathMatch.sort.last.resolveRelative,
	tetra: true,
	// notes: [ \fs7, \bn7, \en8, \en7, \bf7, \cn8].keynum,
	notes: [ \en1, \en2, \en3, \en3, \en2, \en1].keynum + 24,
	relTime: 10.0,
	chords: [
		[ \en1, \en2, \en3, \en3, \en2, \en1].keynum + 24,
		// [ \fs7, \bn7, \en8, \en7, \bf7, \cn8].keynum - 12,
		[ \en2, \en3, \gn3, \dn4, \fs4, \bn4].keynum + 36,
		[ \en2, \dn3, \fs3, \dn4, \fs4, \bn4].keynum + 36,
		[ \en2, \cn3, \gn3, \dn4, \fs4, \bn4].keynum + 36,
		[ \en2, \bn2, \an3, \dn4, \fs4, \bn4].keynum + 36,
		[ \en2, \en3, \cn4, \dn4, \fs4, \bn4].keynum + 36,
		[ \en2, \dn3, \gn3, \cn4, \fs4, \bn4].keynum + 36,
		[ \en2, \cn3, \gn3, \bn3, \fs4, \bn4].keynum + 36,
		[ \en2, \dn3, \fs3, \bn3, \en4, \an4].keynum + 36,

		[ \fs7, \bn7, \en8, \en7, \bf7, \cn8].keynum - 12,
		[ \fn7, \bf7, \ef8, \en7, \bf7, \cn8].keynum - 12,
		[ \en7, \an7, \cs8, \ef7, \af7, \dn8].keynum - 12,
		[ \gf7, \an7, \cn8, \fn7, \af7, \df8].keynum - 12,
		[ \gf7, \an7, \cn8, \fn7, \bf7, \dn8].keynum - 12,
		[ \gf7, \an7, \cn8, \fn7, \bn7, \dn8].keynum - 12,
		[ \gn7, \an7, \cn8, \fn7, \bn7, \dn8].keynum - 12,
		[ \gn7, \an7, \cn8, \fn7, \fn8, \dn8].keynum - 12
	]
));


PR(\popper).chuck(BP(1), parms:(
	interpolatorPath: ("popMelo"++1++"*").resolveRelative.pathMatch.sort.last.resolveRelative,
	tetra: true,
	numNotes: 1
));
)

BP(0).interpolator.gui();


( // record
var path, fileName, ports, dur=1800;
path = "/home/marierm/docs/doc/foret";
fileName = Date.getDate.format("oora"++"_%Y-%m-%d_%H-%M-%S.wav");
ports = " --port SuperCollider:out_1 --port SuperCollider:out_2 --port SuperCollider:out_3 --port SuperCollider:out_4 --port SuperCollider:out_5 --port SuperCollider:out_6 --port reaper:out_1 --port reaper:out_2 ";
("jack_capture --absolutely-silent -c 8 -d " ++ dur ++ ports ++ path +/+ fileName ).unixCmd;
)


"killall jack_capture".unixCmd;

////  stop!!!!!!!!!!

BP(0).stop
s.makeGui

Date.getDate.format("foretRec"++"_%Y-%m-%d_%H-%M-%S.wav")



BP(0).chords = ([
	[ \fs7, \bn7, \en8, \en7, \bf7, \cn8].keynum,
	[ \fn7, \bf7, \ef8, \en7, \bf7, \cn8].keynum,
	[ \en7, \an7, \cs8, \ef7, \af7, \dn8].keynum,
	[ \gf7, \an7, \cn8, \fn7, \af7, \df8].keynum,
	[ \gf7, \an7, \cn8, \fn7, \bf7, \dn8].keynum,
	[ \gf7, \an7, \cn8, \fn7, \bn7, \dn8].keynum,
	[ \gn7, \an7, \cn8, \fn7, \bn7, \dn8].keynum,
	[ \gn7, \an7, \cn8, \fn7, \fn8, \dn8].keynum,
]);
{
	var pos;
	pos = MouseX.kr(-1.0, 1.0);
	DelayN.ar(Impulse.ar(2, mul:0.1), 0.2, [pos.clip(0,1.0) * 0.0017, pos.clip(-1.0,0).abs * 0.0017])
}.play;

.clip(0,1.0) * 0.0017  //left
-0.5.clip(-1.0,0).abs * 0.0017  //right

s.meter

BP(0).rzn.moveAfter(BP(0).manualPops);
BP(0).pitcher.moveBefore(BP(0).manualPops);

BP(3).ampExtractor.set(\decayCoef, 0.998);
BP(3).ampExtractor.set(\decayCoef, 0.999);

BP(0).free;
BP.freeAll;
BP(\sponge).sponge.gui;

x = PresetInterpolatorServer(InterpolatorServer(6));
x = PresetInterpolatorServer.newLoad(("popMelo"++0++"*").resolveRelative.pathMatch.sort.last.resolveRelative);


~sponge = SpongeSLIP();
6.do({ |i|
	x.connect(i, ~sponge.features[i]);
});
x.gui;
x.cursor.add(Parameter("coef", ControlSpec(0.01, 0.8, \lin, 0, 0.4)));
x.newSave(Date.getDate.format("popMelo"++0++"_%Y-%m-%d.pri").resolveRelative);


BP(0).interpolator.gui;
BP(0).interpolator.cursor.add(Parameter("freq0", ControlSpec(-4.0, 4.0, \lin, 0, 0.0)));
BP(0).interpolator.newSave(Date.getDate.format("popMelo"++1++"_%Y-%m-%d.pri").resolveRelative);
BP(0).interpolator.cursor.parameters[0].spec_(ControlSpec(-7.0, 7.0, 'linear', 0, 0.4, ""));


(

SynthDef(\popper, {|out=0, density=7.0, amp=1.0, rq=0.35, delRange=0.0013, fltMin=100, fltMax=8000|
	var dust;
	dust = Dust.ar(density:density);
	dust = DelayN.ar(dust, 0.2, [0, WhiteNoise.kr().range(0, delRange)], amp);
	// dust = BPF.ar(dust, WhiteNoise.kr().range(fltMin,fltMax), rq );
	dust = BPF.ar(PinkNoise.ar(Decay.ar(dust,0.001)), WhiteNoise.kr().range(80,4000));
	dust = GVerb.ar(
		in:dust,
		roomsize:50,
		revtime:0.5,
		damping: 0.5,
		inputbw: 0.5,
		spread: 100,
		drylevel: 1,
		earlyreflevel: 0.005,
		taillevel:0.1
	);
	// dust = CombC.ar(dust, 0.2, 0.03, 1);
	Out.ar( out, dust );
}).add;

SynthDef(\flames, {|out=0|
	var noise;
	noise = PinkNoise.ar(0.1);
	noise = 10.collect{
		RLPF.ar(
			in: noise,
			freq: LFSaw.kr(
				freq: LFNoise0.kr(10).range(0.1, 8.0).squared,
				iphase: 2.0.rand
			).range(
				LFNoise0.kr(10).range(20,80),
				LFNoise0.kr(10).range(150,300)
			),
			rq: LFNoise0.kr(10).range(0.1,0.2),
			mul: LFNoise1.kr(10).range(0.1,0.2)
		);
	};
	Out.ar( out, Splay.ar(noise) );
}).add;
)

~synFlm = Synth.tail(Server.default, \flames);~synPop = Synth.tail(Server.default, \popper);
~synPop.free;~synFlm.free;

Server.default.makeGui


(
~samples = ~bufs.collect({ |item, key|
	Synth.tail(Server.default, \player, [
		\out, 0,
		\bufnum, ~bufs[key].bufnum
	])
});
)



BP(0).chords = ([
	[ \fs5, \bn5, \en6, \en5, \bf5, \cn6].keynum,
	[ \fn5, \bf5, \ef6, \en5, \bf5, \cn6].keynum,
	[ \en5, \an5, \cs6, \ef5, \af5, \dn6].keynum,
	[ \en5, \an5, \cs6, \ef5, \af5, \dn6].keynum,
	
	[ \en2, \en3, \gn3, \dn4, \fs4, \bn4].keynum,
	[ \en2, \dn3, \fs3, \dn4, \fs4, \bn4].keynum,
	[ \en2, \cn3, \gn3, \dn4, \fs4, \bn4].keynum,
	[ \en2, \bn2, \an3, \dn4, \fs4, \bn4].keynum,
	[ \en2, \en3, \cn4, \dn4, \fs4, \bn4].keynum,
	[ \en2, \dn3, \gn3, \cn4, \fs4, \bn4].keynum,
	[ \en2, \cn3, \gn3, \bn3, \fs4, \bn4].keynum,
	[ \en2, \dn3, \fs3, \bn3, \en4, \an4].keynum
	// [ \en1, \bn1, \cn3, \dn4, \fs4, \bn4].keynum,
]);

Server.default.plotTree;



BP(0).interpolator.presets.do({ |i| i.parameters[7].mapped.postln  });

BP(0).interpolator.gui

BP(0).sponge.gui

BP(0).damperBus.get

[900,1000].linlin(0,800,0,1.0)


// John DS Adams (brother of norm adams)

// Ikui Mori